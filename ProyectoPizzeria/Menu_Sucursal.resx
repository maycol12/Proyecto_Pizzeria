<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>